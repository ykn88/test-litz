// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           Role      @default(user)
  contactNo      String?
  whatsapp       String?
  address        String?
  shopName       String?
  openingHrs     DateTime?
  closingHrs     DateTime?
  orderAcceptTime DateTime?
  sessions       Session[]
  cart           Cart[]
  orders         Order[]
  topItems       TopSellingItem[]
  verified       Boolean   @default(false)
}

enum Role {
  user
  admin
}


model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Category {
  id        Int       @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    
  product   Product[] 
}

model Product {
  id          Int        @default(autoincrement()) @id
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String     
  imageUrl    String     
  description String?    
  price       Float      
  stock       Boolean    
  minQuantity Float?
  measure     Measure?     
  category    Category?   @relation(fields: [catId], references:[id])
  catId       Int? 
  cart        Cart?
}

enum Measure {
  perKg
  perItem
}

model Cart {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Float?    
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  productPrice Float      
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      
}

model Order {
  id           Int           @default(autoincrement()) @id
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  phone        String?        
  address      String?        
  pinCode      String?        
  user         User          @relation(fields: [userId], references: [id])
  userId       Int           
  orderDetails OrderDetail[] 
  totalPrice   Float?
  payMode      String?
  payStatus    PayStatus     @default(PENDING)       
  orderStatus  Status        @default(NULL)       
}

enum Status {
  NULL
  PENDING
  DELIVERED
}

model OrderDetail {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quantity  Float    
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  goodsId   Int?
  productPrice Float    
}

enum PayStatus{
  PENDING
  PAID
}

model TopSellingItem {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  itemName  String   
  minQty    Float    
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      
}

